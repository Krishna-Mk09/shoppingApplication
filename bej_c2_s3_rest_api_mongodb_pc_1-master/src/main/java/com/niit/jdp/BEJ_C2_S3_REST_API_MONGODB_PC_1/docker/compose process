


server.port=8086
spring.data.mongodb.uri=mongodb://mongocontainer1:27017/customer
spring.jpa.hibernate.ddl_auto=create
server.error.include-message=always

FROM openjdk
WORKDIR usr/lib
ADD ./target/BEJ_C2_S3_REST_API_MONGODB_PC_1-0.0.1-SNAPSHOT.jar /usr/lib/BEJ_C2_S3_REST_API_MONGODB_PC_1-0.0.1-SNAPSHOT.jar
ENTRYPOINT ["java","-jar","BEJ_C2_S3_REST_API_MONGODB_PC_1-0.0.1-SNAPSHOT.jar"]

PS D:\SpringBoot\BEJ_C2_S3_REST_API_MONGODB_PC_1> docker build -t springimage88 .
[+] Building 3.4s (8/8) FINISHED
 => [internal] load build definition from Dockerfile                                                                                              0.1s
 => => transferring dockerfile: 32B                                                                                                               0.0s
 => [internal] load .dockerignore                                                                                                                 0.0s
 => => transferring context: 2B                                                                                                                   0.0s
 => [internal] load metadata for docker.io/library/openjdk:latest                                                                                 3.1s
 => [1/3] FROM docker.io/library/openjdk@sha256:d2c0bd4450268777610fab98fcf3ee713e5f2cc07180969893d7d99483fafa66                                  0.0s
 => [internal] load build context                                                                                                                 0.0s
 => => transferring context: 107B                                                                                                                 0.0s
 => CACHED [2/3] WORKDIR usr/lib                                                                                                                  0.0s
 => CACHED [3/3] ADD ./target/BEJ_C2_S3_REST_API_MONGODB_PC_1-0.0.1-SNAPSHOT.jar /usr/lib/BEJ_C2_S3_REST_API_MONGODB_PC_1-0.0.1-SNAPSHOT.jar      0.0s
 => exporting to image                                                                                                                            0.0s
 => => exporting layers                                                                                                                           0.0s
 => => writing image sha256:9eb8421b48909bfc98d43728f57526827ede811686a249ea1f81451463e04a82                                                      0.0s
 => => naming to docker.io/library/springimage88                                                                                                  0.0s





Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS D:\SpringBoot\BEJ_C2_S3_REST_API_MONGODB_PC_1> docker run -p 8086:8086 --name container90 --network vamshiNetwork springimage88

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.5)

2022-12-02 07:17:27.266  INFO 1 --- [           main] .j.B.BejC2S3RestApiMongodbPc1Application : Starting BejC2S3RestApiMongodbPc1Application v0.0.1-SNAPSHOT using Java 18.0.2.1 on b74d90aca4c6 with PID 1 (/usr/lib/BEJ_C2_S3_REST_API_MONGODB_PC_1-0.0.1-SNAPSHOT.jar started by root in /usr/lib)
2022-12-02 07:17:27.270  INFO 1 --- [           main] .j.B.BejC2S3RestApiMongodbPc1Application : No active profile set, falling back to 1 default profile: "default"
2022-12-02 07:17:28.007  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-12-02 07:17:28.059  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 46 ms. Found 1 MongoDB repository interfaces.
2022-12-02 07:17:28.632  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8086 (http)
2022-12-02 07:17:28.653  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-12-02 07:17:28.653  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.68]
2022-12-02 07:17:28.791  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-12-02 07:17:28.791  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1447 ms
2022-12-02 07:17:29.060  INFO 1 --- [           main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-j
ava-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "amd64", "version": "5.10.16.3-microsoft-st
andard-WSL2"}, "platform": "Java/Oracle Corporation/18.0.2.1+1-1"} created with settings MongoClientSettings{readPreference=primary, writeConcern=Write
Concern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactory
Factory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvi
der{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}
, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@16c63f5]}, clusterS
ettings={hosts=[mongocontainer1:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector
='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, re
adTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBuffe
rSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxC
onnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSe
ttings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=fal
se, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2022-12-02 07:17:29.129  INFO 1 --- [ontainer1:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:28}] to mongocontainer1:27017
2022-12-02 07:17:29.129  INFO 1 --- [ontainer1:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:27}] to mongocontainer1:27017
2022-12-02 07:17:29.129  INFO 1 --- [ontainer1:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with d
escription ServerDescription{address=mongocontainer1:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=48040101}
2022-12-02 07:17:29.788  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8086 (http) with context path ''
2022-12-02 07:17:29.797  INFO 1 --- [           main] .j.B.BejC2S3RestApiMongodbPc1Application : Started BejC2S3RestApiMongodbPc1Application in 3.116 seconds (JVM running for 4.033)


test> use customer
switched to db customer
customer> db.customer.find().pretty()
[
  {
    _id: 111,
    customerName: 'vamshikrishna',
    PhoneNumber: Long("0"),
    _class: 'com.niit.jdp.BEJ_C2_S3_REST_API_MONGODB_PC_1.domain.Customer'
  },
  {
    _id: 222,
    customerName: 'krishna',
    PhoneNumber: Long("0"),
    _class: 'com.niit.jdp.BEJ_C2_S3_REST_API_MONGODB_PC_1.domain.Customer'
  },
  {
    _id: 333,
    customerName: 'krishna',
    PhoneNumber: Long("0"),
    customerProduct: { productId: 222, productName: 'mac', description: 'sdfaiu' },
    _class: 'com.niit.jdp.BEJ_C2_S3_REST_API_MONGODB_PC_1.domain.Customer'
  },
  {
    _id: 555,
    customerName: 'kiran',
    PhoneNumber: Long("0"),
    customerProduct: {
      productId: 333,
      productName: 'samsung',
      description: 'asdfsdfse'
    },
    _class: 'com.niit.jdp.BEJ_C2_S3_REST_API_MONGODB_PC_1.domain.Customer'
  },
  {
    _id: 554,
    customerName: 'kiran',
    PhoneNumber: Long("0"),
    customerProduct: {
      productId: 333,
      productName: 'samsung',
      description: 'asdfsdfse'
    },
    _class: 'com.niit.jdp.BEJ_C2_S3_REST_API_MONGODB_PC_1.domain.Customer'
  }
]
customer>